{"version":3,"sources":["Utils/pnotify.js","Utils/fetchMovies.js","Components/Cast/CastItemStyled.jsx","Components/Cast/CastItem.jsx","Components/Cast/CastListStyled.jsx","Components/Cast/index.jsx"],"names":["pushError","err","error","text","type","addClass","setTimeout","removeError","errorRef","document","querySelector","remove","defaults","styling","icons","hide","stack","FetchMovies","this","APIURL","searchQuery","key","query","movie","page","points","trending","search","extra","count","a","pageQuot","length","fetch","searchURL","response","json","result","ok","errors","message","StyledCastItem","styled","li","CastItem","img","name","role","path","thmb","alt","src","srcSet","StyledCastList","ul","myFetchMovie","fetchMovies","Cast","props","state","cast","options","match","params","movieId","fetchResult","then","setState","map","actor","profile_path","character","id","Component"],"mappings":"kPAUA,SAASA,EAAUC,GACjBC,gBAAM,CACJC,KAAK,GAAD,OAAKF,GACTG,KAAM,QACNC,SAAU,UAEZC,YAAW,WACTC,MACC,KAGL,SAASA,IACP,IAAMC,EAAWC,SAASC,cAAc,UACpCF,GAAUA,EAASG,SAnBzBC,WAASC,QAAU,WACnBD,WAASE,MAAQ,WACjBF,WAASG,MAAO,EAChBH,WAASD,QAAS,SACXC,WAASI,M,ICJKC,E,WACnB,aAAe,oBACbC,KAAKC,OAAS,gCACdD,KAAKE,YAAc,GACnBF,KAAKG,IAAM,mCACXH,KAAKI,MAAQ,GACbJ,KAAKK,MAAQ,GACbL,KAAKM,KAAO,EACZN,KAAKO,OAAS,CACZC,SAAU,sBACVC,OAAQ,eACRJ,MAAO,UAETL,KAAKd,KAAO,GACZc,KAAKU,MAAQ,G,2CAEf,WACE,OACEV,KAAKC,OACLD,KAAKO,OAAOP,KAAKd,MACjBc,KAAKK,MACLL,KAAKU,MACL,YACAV,KAAKG,M,yBAGT,WACEH,KAAKW,MAAQ,EACbtB,M,gEAGF,iDAAAuB,EAAA,iEAAoBP,aAApB,MAA4B,GAA5B,MAAgCD,aAAhC,MAAwC,GAAxC,MAA4ClB,YAA5C,MAAmD,WAAnD,MAA+DwB,aAA/D,MAAuE,GAAvE,EACEV,KAAKI,MAAQA,EACbJ,KAAKd,KAAOA,EACZc,KAAKK,MAAQA,EACbL,KAAKU,MAAQA,EACTG,EAAW,GACXT,EAAMU,SAAQD,EAAW,UAAYT,GAN3C,mBAQ2BW,MAAMf,KAAKgB,UAAYH,GARlD,eAQUI,EARV,iBASyBA,EAASC,OATlC,WASUC,EATV,QAUQF,EAASG,GAVjB,0CAWaD,GAXb,iCAaWrC,EAAUqC,EAAOE,OAAO,KAbnC,kCAeIvC,EAAU,KAAIwC,SAflB,0D,6MCfaC,EAlBQC,IAAOC,GAAV,iW,OCCdC,EAAW,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACvBC,EAAO,kCACPC,EAAO,qBAEPC,EACJ,4JAEF,OACE,eAAC,EAAD,WACE,qBACEC,IAAKN,EAAMG,EAAOC,EAAOJ,EAAMK,EAC/BA,IAAKJ,EACLM,OAAQP,EAAG,UAAMG,EAAOC,EAAOJ,EAApB,gBAA+BG,EATpC,qBASiDH,EAA5C,OAAuDK,IAEpE,6BAAKJ,IACL,4CAAeC,S,QCTNM,EAPQX,IAAOY,GAAV,8GCIdC,EAAe,IAAIC,IAEJC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAGRC,MAAQ,CACNC,KAAM,IALW,EAQnBC,QAAU,CACRtC,MAAO,EAAKmC,MAAMI,MAAMC,OAAOC,QAC/B5D,KAAM,QACNwB,MAAO,YAXU,E,qDAcnB,WAAqB,IAAD,OAClB2B,EAAaU,YAAY/C,KAAK2C,SAASK,MAAK,SAAA7B,GAC1CA,GAAU,EAAK8B,SAAS,CAAEP,KAAMvB,EAAOuB,Y,oBAI3C,WAAU,IACAA,EAAS1C,KAAKyC,MAAdC,KACR,OACE,cAAC,EAAD,UACGA,GACCA,EAAKQ,KAAI,SAAAC,GAAK,OACZ,cAAC,EAAD,CAEExB,IAAKwB,EAAMC,cAAgB,KAC3BxB,KAAMuB,EAAMvB,KACZC,KAAMsB,EAAME,WAHPF,EAAMG,a,GA5BSC","file":"static/js/6.1d4a96df.chunk.js","sourcesContent":["import { error, defaults } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/Material.css\";\r\nimport \"material-design-icons/iconfont/material-icons.css\";\r\ndefaults.styling = \"material\";\r\ndefaults.icons = \"material\";\r\ndefaults.hide = false;\r\ndefaults.remove = false;\r\ndelete defaults.stack;\r\n\r\nfunction pushError(err) {\r\n  error({\r\n    text: `${err}`,\r\n    type: \"error\",\r\n    addClass: \"error\",\r\n  });\r\n  setTimeout(() => {\r\n    removeError();\r\n  }, 5000);\r\n}\r\n\r\nfunction removeError() {\r\n  const errorRef = document.querySelector(\".error\");\r\n  if (errorRef) errorRef.remove();\r\n}\r\n\r\nexport { pushError, removeError };\r\n","import { pushError, removeError } from \"./pnotify\";\r\n\r\n// https://api.themoviedb.org/3/movie/550?api_key=e5d54dbf2f396b3152db969b26cf47ab\r\n\r\nexport default class FetchMovies {\r\n  constructor() {\r\n    this.APIURL = \"https://api.themoviedb.org/3/\";\r\n    this.searchQuery = \"\";\r\n    this.key = \"e5d54dbf2f396b3152db969b26cf47ab\";\r\n    this.query = \"\";\r\n    this.movie = \"\";\r\n    this.page = 1;\r\n    this.points = {\r\n      trending: \"trending/movie/week\",\r\n      search: \"search/movie\",\r\n      movie: \"movie/\",\r\n    };\r\n    this.type = \"\";\r\n    this.extra = \"\";\r\n  }\r\n  get searchURL() {\r\n    return (\r\n      this.APIURL +\r\n      this.points[this.type] +\r\n      this.movie +\r\n      this.extra +\r\n      \"?api_key=\" +\r\n      this.key\r\n    );\r\n  }\r\n  clearResult() {\r\n    this.count = 1;\r\n    removeError();\r\n  }\r\n\r\n  async fetchResult({ movie = \"\", query = \"\", type = \"trending\", extra = \"\" }) {\r\n    this.query = query;\r\n    this.type = type;\r\n    this.movie = movie;\r\n    this.extra = extra;\r\n    let pageQuot = \"\";\r\n    if (query.length) pageQuot = \"&query=\" + query;\r\n    try {\r\n      const response = await fetch(this.searchURL + pageQuot);\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        return result;\r\n      }\r\n      return pushError(result.errors[0]);\r\n    } catch (err) {\r\n      pushError(err.message);\r\n    }\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst StyledCastItem = styled.li`\r\n  padding: 10px;\r\n  font-size: 12px;\r\n  width: calc((100vw - 8 * 10px) / 9);\r\n  height: fit-content;\r\n  & > img {\r\n    width: 100%;\r\n    height: calc((100vw - 10px * 12) / 9);\r\n    overflow: hidden;\r\n    object-fit: cover;\r\n    object-position: top;\r\n    margin-bottom: 10px;\r\n  }\r\n  & > h3 {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport default StyledCastItem;\r\n","import PropTypes from 'prop-types';\r\nimport StyledCastItem from './CastItemStyled';\r\n\r\nconst CastItem = ({ img, name, role }) => {\r\n  const path = 'https://www.themoviedb.org/t/p/';\r\n  const thmb = 'w220_and_h330_face';\r\n  const lrg = 'w440_and_h660_face';\r\n  const alt =\r\n    'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg';\r\n\r\n  return (\r\n    <StyledCastItem>\r\n      <img\r\n        src={img ? path + thmb + img : alt}\r\n        alt={name}\r\n        srcSet={img ? `${path + thmb + img} 1x, ${path + lrg + img} 2x` : alt}\r\n      />\r\n      <h3>{name}</h3>\r\n      <p>Character: {role}</p>\r\n    </StyledCastItem>\r\n  );\r\n};\r\n\r\nCastItem.propTypes = {\r\n  img: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  role: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { CastItem };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledCastList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 30px;\r\n  list-style-type: none;\r\n`;\r\n\r\nexport default StyledCastList;\r\n","// import PropTypes from \"prop-types\";\r\nimport { Component } from 'react';\r\nimport { CastItem } from './CastItem';\r\nimport fetchMovies from '../../Utils/fetchMovies';\r\nimport StyledCastList from './CastListStyled';\r\n\r\nconst myFetchMovie = new fetchMovies();\r\n\r\nexport default class Cast extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  options = {\r\n    movie: this.props.match.params.movieId,\r\n    type: 'movie',\r\n    extra: '/credits',\r\n  };\r\n\r\n  componentDidMount() {\r\n    myFetchMovie.fetchResult(this.options).then(result => {\r\n      result && this.setState({ cast: result.cast });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n    return (\r\n      <StyledCastList>\r\n        {cast &&\r\n          cast.map(actor => (\r\n            <CastItem\r\n              key={actor.id}\r\n              img={actor.profile_path || null}\r\n              name={actor.name}\r\n              role={actor.character}\r\n            />\r\n          ))}\r\n      </StyledCastList>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}