{"version":3,"sources":["Utils/pnotify.js","Utils/fetchMovies.js","Components/MovieDetailsPage/MoviesDetailsStyled.jsx","Components/MovieDetailsPage/DetailsLinksStyled.jsx","Components/MovieDetailsPage/index.jsx"],"names":["pushError","err","error","text","type","addClass","setTimeout","removeError","errorRef","document","querySelector","remove","defaults","styling","icons","hide","stack","FetchMovies","this","APIURL","searchQuery","key","query","movie","page","points","trending","search","extra","count","a","pageQuot","length","fetch","searchURL","response","json","result","ok","errors","message","StyledMoviesDetails","styled","div","StyledDetailsLinks","myFetchMovie","fetchMovies","MovieDetailsPage","props","state","options","match","params","movieId","fetchResult","then","setState","img","poster_path","name","original_title","vote_average","overview","genres","path","thmb","alt","year","release_date","slice","src","srcSet","className","map","genre","id","to","Component"],"mappings":"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","file":"static/js/7.a1807332.chunk.js","sourcesContent":["import { error, defaults } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/Material.css\";\r\nimport \"material-design-icons/iconfont/material-icons.css\";\r\ndefaults.styling = \"material\";\r\ndefaults.icons = \"material\";\r\ndefaults.hide = false;\r\ndefaults.remove = false;\r\ndelete defaults.stack;\r\n\r\nfunction pushError(err) {\r\n  error({\r\n    text: `${err}`,\r\n    type: \"error\",\r\n    addClass: \"error\",\r\n  });\r\n  setTimeout(() => {\r\n    removeError();\r\n  }, 5000);\r\n}\r\n\r\nfunction removeError() {\r\n  const errorRef = document.querySelector(\".error\");\r\n  if (errorRef) errorRef.remove();\r\n}\r\n\r\nexport { pushError, removeError };\r\n","import { pushError, removeError } from \"./pnotify\";\r\n\r\n// https://api.themoviedb.org/3/movie/550?api_key=e5d54dbf2f396b3152db969b26cf47ab\r\n\r\nexport default class FetchMovies {\r\n  constructor() {\r\n    this.APIURL = \"https://api.themoviedb.org/3/\";\r\n    this.searchQuery = \"\";\r\n    this.key = \"e5d54dbf2f396b3152db969b26cf47ab\";\r\n    this.query = \"\";\r\n    this.movie = \"\";\r\n    this.page = 1;\r\n    this.points = {\r\n      trending: \"trending/movie/week\",\r\n      search: \"search/movie\",\r\n      movie: \"movie/\",\r\n    };\r\n    this.type = \"\";\r\n    this.extra = \"\";\r\n  }\r\n  get searchURL() {\r\n    return (\r\n      this.APIURL +\r\n      this.points[this.type] +\r\n      this.movie +\r\n      this.extra +\r\n      \"?api_key=\" +\r\n      this.key\r\n    );\r\n  }\r\n  clearResult() {\r\n    this.count = 1;\r\n    removeError();\r\n  }\r\n\r\n  async fetchResult({ movie = \"\", query = \"\", type = \"trending\", extra = \"\" }) {\r\n    this.query = query;\r\n    this.type = type;\r\n    this.movie = movie;\r\n    this.extra = extra;\r\n    let pageQuot = \"\";\r\n    if (query.length) pageQuot = \"&query=\" + query;\r\n    try {\r\n      const response = await fetch(this.searchURL + pageQuot);\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        return result;\r\n      }\r\n      return pushError(result.errors[0]);\r\n    } catch (err) {\r\n      pushError(err.message);\r\n    }\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst StyledMoviesDetails = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: 30px;\r\n  font-size: 18px;\r\n  border-bottom: 1px solid rgb(238, 60, 125);\r\n  .ImageWrapper {\r\n    \r\n  }\r\n  & > img {\r\n    height: 100%;\r\n    width: 300px;\r\n    object-fit: contain;\r\n    object-position: top center;\r\n    overflow: hidden;\r\n    flex-shrink: 0;\r\n    margin-right: 20px;\r\n    }\r\n    & > .MovieDetails {\r\n      & :not(:last-child) {\r\n        margin-bottom: 20px;\r\n      }\r\n      .GenreList {\r\n        display: flex;\r\n        list-style-type: none;\r\n        & :not(:last-child) {\r\n          margin-right: 10px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledMoviesDetails;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledDetailsLinks = styled.div`\r\n  padding: 30px;\r\n  border: 1px solid #717171;\r\n  border-left: none;\r\n  border-right: none;\r\n  & h3 {\r\n    padding: 20px 0;\r\n  }\r\n  & ul {\r\n    list-style-position: inside;\r\n  }\r\n  & a {\r\n    display: inline-block;\r\n    color: #717171;\r\n    margin-bottom: 20px;\r\n    &:hover,\r\n    &:focus {\r\n      color: palevioletred;\r\n    }\r\n    &:active {\r\n      color: #212121;\r\n    }\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledDetailsLinks;\r\n","import { Link } from 'react-router-dom';\r\nimport { Component } from 'react';\r\nimport fetchMovies from '../../Utils/fetchMovies';\r\nimport StyledMovieDetails from './MoviesDetailsStyled';\r\nimport StyledDetailsLinks from './DetailsLinksStyled';\r\n\r\nconst myFetchMovie = new fetchMovies();\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    movie: null,\r\n  };\r\n\r\n  options = {\r\n    movie: this.props.match.params.movieId,\r\n    type: 'movie',\r\n  };\r\n\r\n  componentDidMount() {\r\n    myFetchMovie.fetchResult(this.options).then(result => {\r\n      result && this.setState({ movie: result });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.movie) {\r\n      const {\r\n        poster_path: img,\r\n        original_title: name,\r\n        vote_average,\r\n        overview,\r\n        genres,\r\n        release_date,\r\n      } = this.state.movie;\r\n\r\n      const path = 'https://www.themoviedb.org/t/p/';\r\n      const thmb = 'w300_and_h450_bestv2';\r\n      const lrg = 'w600_and_h900_bestv2';\r\n      const alt =\r\n        'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg';\r\n      const year = release_date.slice(0, 4);\r\n\r\n      return (\r\n        <>\r\n          <StyledMovieDetails>\r\n            <img\r\n              src={img ? path + thmb + img : alt}\r\n              alt={name}\r\n              srcSet={\r\n                img ? `${path + thmb + img} 1x, ${path + lrg + img} 2x` : alt\r\n              }\r\n            />\r\n            <div className=\"MovieDetails\">\r\n              <h1>{`${name} (${year})`}</h1>\r\n              <p>{`User Score: ${vote_average * 10}%`}</p>\r\n              <h2>Overview</h2>\r\n              <p>{overview}</p>\r\n              <h3>Genres</h3>\r\n              <ul className=\"GenreList\">\r\n                {genres.length\r\n                  ? genres.map(genre => (\r\n                      <li className=\"GenreItem\" key={genre.id}>\r\n                        {genre.name}\r\n                      </li>\r\n                    ))\r\n                  : null}\r\n              </ul>\r\n            </div>\r\n          </StyledMovieDetails>\r\n          <StyledDetailsLinks>\r\n            <h3>Additional information:</h3>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  to={`/movies/${this.options.movie}/cast`}\r\n                  className=\"Link\"\r\n                >\r\n                  Cast\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  to={`/movies/${this.options.movie}/reviews`}\r\n                  className=\"Link\"\r\n                >\r\n                  Reviews\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </StyledDetailsLinks>\r\n        </>\r\n      );\r\n    } else return <div>Something went wrong</div>;\r\n  }\r\n}\r\n"],"sourceRoot":""}