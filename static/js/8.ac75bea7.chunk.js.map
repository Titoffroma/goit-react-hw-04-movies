{"version":3,"sources":["Utils/pnotify.js","Utils/fetchMovies.js","Components/Reviews/ReviewsStyled.jsx","Components/Reviews/index.jsx"],"names":["pushError","err","error","text","type","addClass","setTimeout","removeError","errorRef","document","querySelector","remove","defaults","styling","icons","hide","stack","FetchMovies","this","APIURL","searchQuery","key","query","movie","page","points","trending","search","extra","count","a","pageQuot","length","fetch","searchURL","response","json","result","ok","errors","message","StyledReviews","styled","ul","myFetchMovie","fetchMovies","Reviews","props","state","reviews","options","match","params","movieId","fetchResult","then","setState","results","map","review","author","content","id","Component"],"mappings":"kPAUA,SAASA,EAAUC,GACjBC,gBAAM,CACJC,KAAK,GAAD,OAAKF,GACTG,KAAM,QACNC,SAAU,UAEZC,YAAW,WACTC,MACC,KAGL,SAASA,IACP,IAAMC,EAAWC,SAASC,cAAc,UACpCF,GAAUA,EAASG,SAnBzBC,WAASC,QAAU,WACnBD,WAASE,MAAQ,WACjBF,WAASG,MAAO,EAChBH,WAASD,QAAS,SACXC,WAASI,M,ICJKC,E,WACnB,aAAe,oBACbC,KAAKC,OAAS,gCACdD,KAAKE,YAAc,GACnBF,KAAKG,IAAM,mCACXH,KAAKI,MAAQ,GACbJ,KAAKK,MAAQ,GACbL,KAAKM,KAAO,EACZN,KAAKO,OAAS,CACZC,SAAU,sBACVC,OAAQ,eACRJ,MAAO,UAETL,KAAKd,KAAO,GACZc,KAAKU,MAAQ,G,2CAEf,WACE,OACEV,KAAKC,OACLD,KAAKO,OAAOP,KAAKd,MACjBc,KAAKK,MACLL,KAAKU,MACL,YACAV,KAAKG,M,yBAGT,WACEH,KAAKW,MAAQ,EACbtB,M,gEAGF,iDAAAuB,EAAA,iEAAoBP,aAApB,MAA4B,GAA5B,MAAgCD,aAAhC,MAAwC,GAAxC,MAA4ClB,YAA5C,MAAmD,WAAnD,MAA+DwB,aAA/D,MAAuE,GAAvE,EACEV,KAAKI,MAAQA,EACbJ,KAAKd,KAAOA,EACZc,KAAKK,MAAQA,EACbL,KAAKU,MAAQA,EACTG,EAAW,GACXT,EAAMU,SAAQD,EAAW,UAAYT,GAN3C,mBAQ2BW,MAAMf,KAAKgB,UAAYH,GARlD,eAQUI,EARV,iBASyBA,EAASC,OATlC,WASUC,EATV,QAUQF,EAASG,GAVjB,0CAWaD,GAXb,iCAaWrC,EAAUqC,EAAOE,OAAO,KAbnC,kCAeIvC,EAAU,KAAIwC,SAflB,0D,2MCpBaC,E,MAbOC,EAAOC,GAAV,iN,OCEbC,EAAe,IAAIC,IAEJC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAGRC,MAAQ,CACNC,QAAS,IALQ,EAQnBC,QAAU,CACR3B,MAAO,EAAKwB,MAAMI,MAAMC,OAAOC,QAC/BjD,KAAM,QACNwB,MAAO,YAXU,E,qDAcnB,WAAqB,IAAD,OAClBgB,EAAaU,YAAYpC,KAAKgC,SAASK,MAAK,SAAAlB,GAC1CA,GAAU,EAAKmB,SAAS,CAAEP,QAASZ,EAAOoB,e,oBAI9C,WAAU,IACAR,EAAY/B,KAAK8B,MAAjBC,QACR,OACE,cAAC,EAAD,UACGA,EAAQjB,OACPiB,EAAQS,KAAI,SAAAC,GAAM,OAChB,+BACE,0CAAaA,EAAOC,UACpB,4BAAID,EAAOE,YAFJF,EAAOG,OAMlB,yD,GAjC2BC","file":"static/js/8.ac75bea7.chunk.js","sourcesContent":["import { error, defaults } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/Material.css\";\r\nimport \"material-design-icons/iconfont/material-icons.css\";\r\ndefaults.styling = \"material\";\r\ndefaults.icons = \"material\";\r\ndefaults.hide = false;\r\ndefaults.remove = false;\r\ndelete defaults.stack;\r\n\r\nfunction pushError(err) {\r\n  error({\r\n    text: `${err}`,\r\n    type: \"error\",\r\n    addClass: \"error\",\r\n  });\r\n  setTimeout(() => {\r\n    removeError();\r\n  }, 5000);\r\n}\r\n\r\nfunction removeError() {\r\n  const errorRef = document.querySelector(\".error\");\r\n  if (errorRef) errorRef.remove();\r\n}\r\n\r\nexport { pushError, removeError };\r\n","import { pushError, removeError } from \"./pnotify\";\r\n\r\n// https://api.themoviedb.org/3/movie/550?api_key=e5d54dbf2f396b3152db969b26cf47ab\r\n\r\nexport default class FetchMovies {\r\n  constructor() {\r\n    this.APIURL = \"https://api.themoviedb.org/3/\";\r\n    this.searchQuery = \"\";\r\n    this.key = \"e5d54dbf2f396b3152db969b26cf47ab\";\r\n    this.query = \"\";\r\n    this.movie = \"\";\r\n    this.page = 1;\r\n    this.points = {\r\n      trending: \"trending/movie/week\",\r\n      search: \"search/movie\",\r\n      movie: \"movie/\",\r\n    };\r\n    this.type = \"\";\r\n    this.extra = \"\";\r\n  }\r\n  get searchURL() {\r\n    return (\r\n      this.APIURL +\r\n      this.points[this.type] +\r\n      this.movie +\r\n      this.extra +\r\n      \"?api_key=\" +\r\n      this.key\r\n    );\r\n  }\r\n  clearResult() {\r\n    this.count = 1;\r\n    removeError();\r\n  }\r\n\r\n  async fetchResult({ movie = \"\", query = \"\", type = \"trending\", extra = \"\" }) {\r\n    this.query = query;\r\n    this.type = type;\r\n    this.movie = movie;\r\n    this.extra = extra;\r\n    let pageQuot = \"\";\r\n    if (query.length) pageQuot = \"&query=\" + query;\r\n    try {\r\n      const response = await fetch(this.searchURL + pageQuot);\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        return result;\r\n      }\r\n      return pushError(result.errors[0]);\r\n    } catch (err) {\r\n      pushError(err.message);\r\n    }\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst StyledReviews = styled.ul`\r\n  padding: 30px;\r\n  font-size: 16px;\r\n  list-style-type: none;\r\n  & > li {\r\n    margin-bottom: 20px;\r\n    & h4 {\r\n      padding-left: 20px;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledReviews;\r\n","import { Component } from 'react';\r\nimport fetchMovies from '../../Utils/fetchMovies';\r\nimport StyledReviews from './ReviewsStyled';\r\n\r\nconst myFetchMovie = new fetchMovies();\r\n\r\nexport default class Reviews extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  options = {\r\n    movie: this.props.match.params.movieId,\r\n    type: 'movie',\r\n    extra: '/reviews',\r\n  };\r\n\r\n  componentDidMount() {\r\n    myFetchMovie.fetchResult(this.options).then(result => {\r\n      result && this.setState({ reviews: result.results });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <StyledReviews>\r\n        {reviews.length ? (\r\n          reviews.map(review => (\r\n            <li key={review.id}>\r\n              <h4>Author: {review.author}</h4>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <div>No reviews found</div>\r\n        )}\r\n      </StyledReviews>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}