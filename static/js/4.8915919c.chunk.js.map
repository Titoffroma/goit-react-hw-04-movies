{"version":3,"sources":["Utils/pnotify.js","Utils/fetchMovies.js","Components/MoviesPage/MoviesListStyled.jsx","Components/MoviesPage/MoviesList.jsx","Components/HomePage/index.jsx"],"names":["pushError","err","error","text","type","addClass","setTimeout","removeError","errorRef","document","querySelector","remove","defaults","styling","icons","hide","stack","FetchMovies","this","APIURL","searchQuery","key","query","movie","page","points","trending","search","extra","count","a","pageQuot","length","fetch","searchURL","response","json","result","ok","errors","message","StyledMoviesList","styled","ul","MoviesList","movies","map","to","id","className","original_title","myFetchMovie","fetchMovies","HomePage","props","state","fetchResult","then","setState","results","Component"],"mappings":"kPAUA,SAASA,EAAUC,GACjBC,gBAAM,CACJC,KAAK,GAAD,OAAKF,GACTG,KAAM,QACNC,SAAU,UAEZC,YAAW,WACTC,MACC,KAGL,SAASA,IACP,IAAMC,EAAWC,SAASC,cAAc,UACpCF,GAAUA,EAASG,SAnBzBC,WAASC,QAAU,WACnBD,WAASE,MAAQ,WACjBF,WAASG,MAAO,EAChBH,WAASD,QAAS,SACXC,WAASI,M,ICJKC,E,WACnB,aAAe,oBACbC,KAAKC,OAAS,gCACdD,KAAKE,YAAc,GACnBF,KAAKG,IAAM,mCACXH,KAAKI,MAAQ,GACbJ,KAAKK,MAAQ,GACbL,KAAKM,KAAO,EACZN,KAAKO,OAAS,CACZC,SAAU,sBACVC,OAAQ,eACRJ,MAAO,UAETL,KAAKd,KAAO,GACZc,KAAKU,MAAQ,G,2CAEf,WACE,OACEV,KAAKC,OACLD,KAAKO,OAAOP,KAAKd,MACjBc,KAAKK,MACLL,KAAKU,MACL,YACAV,KAAKG,M,yBAGT,WACEH,KAAKW,MAAQ,EACbtB,M,gEAGF,iDAAAuB,EAAA,iEAAoBP,aAApB,MAA4B,GAA5B,MAAgCD,aAAhC,MAAwC,GAAxC,MAA4ClB,YAA5C,MAAmD,WAAnD,MAA+DwB,aAA/D,MAAuE,GAAvE,EACEV,KAAKI,MAAQA,EACbJ,KAAKd,KAAOA,EACZc,KAAKK,MAAQA,EACbL,KAAKU,MAAQA,EACTG,EAAW,GACXT,EAAMU,SAAQD,EAAW,UAAYT,GAN3C,mBAQ2BW,MAAMf,KAAKgB,UAAYH,GARlD,eAQUI,EARV,iBASyBA,EAASC,OATlC,WASUC,EATV,QAUQF,EAASG,GAVjB,0CAWaD,GAXb,iCAaWrC,EAAUqC,EAAOE,OAAO,KAbnC,kCAeIvC,EAAU,KAAIwC,SAflB,0D,sJCFaC,E,MA/BUC,EAAOC,GAAV,unB,OCEhBC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,cAAC,EAAD,UACGA,EACCA,EAAOb,OACLa,EAAOC,KAAI,SAAAvB,GAAK,OACd,6BACE,cAAC,IAAD,CAAMwB,GAAE,kBAAaxB,EAAMyB,IAAMC,UAAU,OAA3C,SACG1B,EAAM2B,kBAFF3B,EAAMyB,OAOjB,kEAEA,S,iJCfJG,EAAe,IAAIC,IAEJC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAGRC,MAAQ,CACNV,OAAQ,IALS,E,qDAQnB,WAAqB,IAAD,OAClBM,EAAaK,YAAY,IAAIC,MAAK,SAAAtB,GAC5BA,GACF,EAAKuB,SAAS,CAAEb,OAAQV,EAASwB,e,oBAKvC,WAAU,IACAd,EAAW3B,KAAKqC,MAAhBV,OACR,OAAO,cAAC,IAAD,CAAYA,OAAQA,Q,GAnBOe","file":"static/js/4.8915919c.chunk.js","sourcesContent":["import { error, defaults } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/Material.css\";\r\nimport \"material-design-icons/iconfont/material-icons.css\";\r\ndefaults.styling = \"material\";\r\ndefaults.icons = \"material\";\r\ndefaults.hide = false;\r\ndefaults.remove = false;\r\ndelete defaults.stack;\r\n\r\nfunction pushError(err) {\r\n  error({\r\n    text: `${err}`,\r\n    type: \"error\",\r\n    addClass: \"error\",\r\n  });\r\n  setTimeout(() => {\r\n    removeError();\r\n  }, 5000);\r\n}\r\n\r\nfunction removeError() {\r\n  const errorRef = document.querySelector(\".error\");\r\n  if (errorRef) errorRef.remove();\r\n}\r\n\r\nexport { pushError, removeError };\r\n","import { pushError, removeError } from \"./pnotify\";\r\n\r\n// https://api.themoviedb.org/3/movie/550?api_key=e5d54dbf2f396b3152db969b26cf47ab\r\n\r\nexport default class FetchMovies {\r\n  constructor() {\r\n    this.APIURL = \"https://api.themoviedb.org/3/\";\r\n    this.searchQuery = \"\";\r\n    this.key = \"e5d54dbf2f396b3152db969b26cf47ab\";\r\n    this.query = \"\";\r\n    this.movie = \"\";\r\n    this.page = 1;\r\n    this.points = {\r\n      trending: \"trending/movie/week\",\r\n      search: \"search/movie\",\r\n      movie: \"movie/\",\r\n    };\r\n    this.type = \"\";\r\n    this.extra = \"\";\r\n  }\r\n  get searchURL() {\r\n    return (\r\n      this.APIURL +\r\n      this.points[this.type] +\r\n      this.movie +\r\n      this.extra +\r\n      \"?api_key=\" +\r\n      this.key\r\n    );\r\n  }\r\n  clearResult() {\r\n    this.count = 1;\r\n    removeError();\r\n  }\r\n\r\n  async fetchResult({ movie = \"\", query = \"\", type = \"trending\", extra = \"\" }) {\r\n    this.query = query;\r\n    this.type = type;\r\n    this.movie = movie;\r\n    this.extra = extra;\r\n    let pageQuot = \"\";\r\n    if (query.length) pageQuot = \"&query=\" + query;\r\n    try {\r\n      const response = await fetch(this.searchURL + pageQuot);\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        return result;\r\n      }\r\n      return pushError(result.errors[0]);\r\n    } catch (err) {\r\n      pushError(err.message);\r\n    }\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst StyledMoviesList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 30px;\r\n  font-size: 16px;\r\n  list-style-type: none;\r\n  & > li {\r\n    padding: 10px 0;\r\n    width: 250px;\r\n    border-bottom: 1px solid palevioletred;\r\n    & > a {\r\n      color: #717171;\r\n      text-decoration: none;\r\n      width: 100%;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      &:hover,\r\n      &:focus {\r\n        color: palevioletred;\r\n        font-weight: bold;\r\n      }\r\n      &:active {\r\n        color: #212121;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledMoviesList;\r\n","import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport StyledMoviesList from './MoviesListStyled';\r\n\r\nconst MoviesList = ({ movies }) => {\r\n  return (\r\n    <StyledMoviesList>\r\n      {movies ? (\r\n        movies.length ? (\r\n          movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link to={`/movies/${movie.id}`} className=\"Link\">\r\n                {movie.original_title}\r\n              </Link>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No matches found.Try new search.</li>\r\n        )\r\n      ) : null}\r\n    </StyledMoviesList>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array,\r\n};\r\n\r\nexport { MoviesList };\r\n","import { Component } from 'react';\r\nimport fetchMovies from '../../Utils/fetchMovies';\r\nimport { MoviesList } from '../MoviesPage/MoviesList';\r\n\r\nconst myFetchMovie = new fetchMovies();\r\n\r\nexport default class HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    myFetchMovie.fetchResult({}).then(response => {\r\n      if (response) {\r\n        this.setState({ movies: response.results });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return <MoviesList movies={movies} />;\r\n  }\r\n}\r\n"],"sourceRoot":""}